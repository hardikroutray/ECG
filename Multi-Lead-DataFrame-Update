{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f5a54e19",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import cv2\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sn\n",
    "import os.path, sys, re\n",
    "import time\n",
    "from PIL import Image\n",
    "\n",
    "from sktime.utils.data_processing import (\n",
    "    from_3d_numpy_to_nested,\n",
    "    from_multi_index_to_3d_numpy,\n",
    "    from_nested_to_3d_numpy,\n",
    "    from_multi_index_to_nested,\n",
    "    from_nested_to_multi_index,\n",
    ")\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.pipeline import Pipeline\n",
    "import sklearn.metrics as metrics\n",
    "from sklearn.model_selection import StratifiedShuffleSplit\n",
    "from sklearn.model_selection import cross_val_predict\n",
    "\n",
    "from sktime.classification.compose import ColumnEnsembleClassifier\n",
    "from sktime.classification.dictionary_based import BOSSEnsemble\n",
    "from sktime.classification.interval_based import TimeSeriesForestClassifier\n",
    "from sktime.classification.shapelet_based import MrSEQLClassifier\n",
    "from sktime.datasets import load_basic_motions\n",
    "from sktime.transformations.panel.compose import ColumnConcatenator\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "70e3cc1c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/moise/Desktop/Data_Science/Erdos_Institute/ecg-proj/ecg-copy\n"
     ]
    }
   ],
   "source": [
    "cd ~/Desktop/Data_Science/Erdos_Institute/ecg-proj/ecg-copy/"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f0cdc5d0",
   "metadata": {},
   "source": [
    "### Data Preprocessing task"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "96b63a75",
   "metadata": {},
   "outputs": [],
   "source": [
    "pathroot = \"CSV_data_v2/\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "952c9fcc",
   "metadata": {},
   "outputs": [],
   "source": [
    "LeadDict={'Lead1':np.array([[]]),'Lead2':np.array([[]]),'Lead3':np.array([[]]),'Lead4':np.array([[]]),\n",
    "          'Lead5':np.array([[]]),'Lead6':np.array([[]]),'Lead7':np.array([[]]),'Lead8':np.array([[]]),\n",
    "         'Lead9':np.array([[]]),'Lead10':np.array([[]]),'Lead11':np.array([[]]),'Lead12':np.array([[]])}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b25f602e",
   "metadata": {},
   "outputs": [],
   "source": [
    "leadMinLen = {'Lead1':0,'Lead2':0,'Lead3':0,'Lead4':0,'Lead5':0,'Lead6':0,\n",
    "           'Lead7':0,'Lead8':0,'Lead9':0,'Lead10':0,'Lead11':0,'Lead12':0}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "34d659e8",
   "metadata": {},
   "outputs": [],
   "source": [
    "ClassLabels={'ECGImagesofPatientthathaveHistoryofMI':0,'ECGImagesofPatientthathaveabnormalheartbeat':1,\n",
    "            'ECGImagesofCOVID-19Patients':2,'NormalPersonECGImages':3,'ECGImagesofMyocardialInfarctionPatients':4}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "4bfdbe9c",
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "For every \"x\" value of the signal, average the \"y\" values over duplicates.\n",
    "\n",
    "Inputs:\n",
    "-------\n",
    "df  data frame of two columns containing the signal \"x\" and \"y\" coordinates corresponding to \"active\" pixels\n",
    "\n",
    "Outputs:\n",
    "--------\n",
    "signal numpy array of unique values (\"y\") of the signal\n",
    "\"\"\"\n",
    "def uniqValsSignal(df):\n",
    "    xdf=df[0].to_numpy()\n",
    "    ydf=df[1].to_numpy()\n",
    "    unikVals = pd.unique(xdf)\n",
    "    signal = np.zeros(len(unikVals))\n",
    "    for i in range(len(unikVals)):\n",
    "        mask = (xdf==unikVals[i])\n",
    "        signal[i] = np.mean(ydf[mask])\n",
    "    return signal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "3a10f67e",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Processing ECGImagesofPatientthathaveHistoryofMI folder ...\n",
      "2064 files processed in this folder in 19 sec...\n",
      "\n",
      "Processing ECGImagesofPatientthathaveabnormalheartbeat folder ...\n",
      "2796 files processed in this folder in 29 sec...\n",
      "\n",
      "Processing ECGImagesofCOVID-19Patients folder ...\n",
      "3000 files processed in this folder in 14 sec...\n",
      "\n",
      "Processing NormalPersonECGImages folder ...\n",
      "3408 files processed in this folder in 33 sec...\n",
      "\n",
      "Processing ECGImagesofMyocardialInfarctionPatients folder ...\n",
      "2868 files processed in this folder in 28 sec...\n",
      "\n"
     ]
    }
   ],
   "source": [
    "\"\"\"\n",
    "Note:\n",
    "-----\n",
    "\n",
    "1) For the \"time series\", only the second column of every lead is extracted as signal.\n",
    "2) Because of non-uniformity in signal lenght across both observations and Leads, the code\n",
    "uses the minimum signal length across observation and leads, in order to make the date \"proper\n",
    "for multivariate time series classification.\n",
    "\"\"\"\n",
    "\n",
    "labelArr = np.array([])\n",
    "for dirs in os.listdir(pathroot):\n",
    "#     if dirs == 'ECGImagesofCOVID-19Patients':\n",
    "#         continue\n",
    "    t = time.time()\n",
    "    count = 0\n",
    "    print('Processing {0} folder ...'.format(dirs))\n",
    "    if not os.path.isfile(dirs):\n",
    "        for item in os.listdir(os.path.join(pathroot,dirs)):\n",
    "            #print('Processing {0} file ...'.format(item))\n",
    "            of, oe = os.path.splitext(item)\n",
    "            if of[0]=='.':\n",
    "                continue\n",
    "            else:\n",
    "                signal = pd.read_csv(os.path.join(pathroot,os.path.join(dirs,item)),header=None,sep=' ')#[1].to_numpy()\n",
    "                signal = uniqValsSignal(signal)\n",
    "            try:\n",
    "                leadNum = int(of[-2:])\n",
    "            except ValueError:\n",
    "                leadNum = int(of[-1:])\n",
    "            finally:\n",
    "                leadKey = 'Lead'+str(leadNum)\n",
    "            if leadNum == 13:\n",
    "                continue\n",
    "            if LeadDict[leadKey].shape[1] > 0:\n",
    "                if len(signal)> leadMinLen[leadKey]:\n",
    "                    signal = np.reshape(signal[:leadMinLen[leadKey]],(1,leadMinLen[leadKey]))\n",
    "                    LeadDict[leadKey] = np.concatenate( (LeadDict[leadKey],signal) )\n",
    "                else:\n",
    "                    LeadDict[leadKey] = LeadDict[leadKey][:,:len(signal)]\n",
    "                    LeadDict[leadKey] = np.concatenate( (LeadDict[leadKey],np.reshape(signal,(1,len(signal)))) )\n",
    "                    leadMinLen[leadKey] = len(signal) \n",
    "            else:\n",
    "                LeadDict[leadKey] = np.reshape(signal,(1,len(signal)))\n",
    "                leadMinLen[leadKey] = len(signal)         \n",
    "            count = count+1\n",
    "        labelArr = np.append(labelArr,np.repeat(ClassLabels[dirs],len(LeadDict[leadKey])-len(labelArr))) ##Add labels\n",
    "        t = time.time()-t\n",
    "        print('{0} files processed in this folder in {1} sec...\\n'.format(count,round(t)))    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e2823e5f",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "Post Processing:\n",
    "---------------\n",
    "\n",
    "1) Put all the leads on the same \"time\" scale/Length\n",
    "2) Pull all the leads(2D) into a 3D array of shape (n_obs,n_col,n_timepoints)\n",
    "3) Convert result from step 2 into a nested data frame.\n",
    "\"\"\"\n",
    "\n",
    "minLen = min(leadMinLen.values())\n",
    "for key in LeadDict.keys():\n",
    "    LeadDict[key] = LeadDict[key][:,:minLen]\n",
    "\n",
    "dim1 = LeadDict['Lead1'].shape[0]\n",
    "dim2 = len(LeadDict.keys())\n",
    "dim3 = LeadDict['Lead1'].shape[1]\n",
    "X3d = np.zeros((dim1,dim2,dim3))\n",
    "for j in range(dim2):\n",
    "    X3d[:,j,:] = list(LeadDict.values())[j]\n",
    "    \n",
    "X3d_nested=from_3d_numpy_to_nested(X3d)\n",
    "X3d_nested.columns = list(LeadDict.keys())\n",
    "X3d_nested['Label'] = labelArr\n",
    "X3d_nested.to_csv('muti-lead-dataFrame.csv',index=False,float_format='%d')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "fdfd5abc",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Lead1</th>\n",
       "      <th>Lead2</th>\n",
       "      <th>Lead3</th>\n",
       "      <th>Lead4</th>\n",
       "      <th>Lead5</th>\n",
       "      <th>Lead6</th>\n",
       "      <th>Lead7</th>\n",
       "      <th>Lead8</th>\n",
       "      <th>Lead9</th>\n",
       "      <th>Lead10</th>\n",
       "      <th>Lead11</th>\n",
       "      <th>Lead12</th>\n",
       "      <th>Label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0      126.0\n",
       "1      119.5\n",
       "2      134.0\n",
       "3      ...</td>\n",
       "      <td>0      105.0\n",
       "1      104.5\n",
       "2      104.5\n",
       "3      ...</td>\n",
       "      <td>0      104.714286\n",
       "1      117.250000\n",
       "2      101...</td>\n",
       "      <td>0       35.957447\n",
       "1       35.500000\n",
       "2       46...</td>\n",
       "      <td>0      158.000000\n",
       "1      157.333333\n",
       "2      149...</td>\n",
       "      <td>0      119.5\n",
       "1      116.5\n",
       "2      125.5\n",
       "3      ...</td>\n",
       "      <td>0      137.5\n",
       "1      137.0\n",
       "2      136.5\n",
       "3      ...</td>\n",
       "      <td>0      156.0\n",
       "1      154.0\n",
       "2      153.5\n",
       "3      ...</td>\n",
       "      <td>0      162.000000\n",
       "1      162.000000\n",
       "2      151...</td>\n",
       "      <td>0      155.0\n",
       "1      154.5\n",
       "2      155.5\n",
       "3      ...</td>\n",
       "      <td>0      193.545455\n",
       "1        3.500000\n",
       "2        3...</td>\n",
       "      <td>0       89.000000\n",
       "1      109.500000\n",
       "2       91...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0      139.0\n",
       "1      129.0\n",
       "2      127.0\n",
       "3      ...</td>\n",
       "      <td>0      103.0\n",
       "1      103.0\n",
       "2      102.0\n",
       "3      ...</td>\n",
       "      <td>0      80.5\n",
       "1      80.0\n",
       "2      79.0\n",
       "3      79....</td>\n",
       "      <td>0       67.5\n",
       "1       72.0\n",
       "2       77.0\n",
       "3      ...</td>\n",
       "      <td>0      127.5\n",
       "1      126.0\n",
       "2      131.5\n",
       "3      ...</td>\n",
       "      <td>0      130.0\n",
       "1      139.0\n",
       "2      130.5\n",
       "3      ...</td>\n",
       "      <td>0      129.5\n",
       "1      129.5\n",
       "2      129.5\n",
       "3      ...</td>\n",
       "      <td>0      155.5\n",
       "1      155.5\n",
       "2      155.5\n",
       "3      ...</td>\n",
       "      <td>0      139.0\n",
       "1      131.5\n",
       "2      128.5\n",
       "3      ...</td>\n",
       "      <td>0      153.5\n",
       "1      149.0\n",
       "2      151.0\n",
       "3      ...</td>\n",
       "      <td>0       80.166667\n",
       "1       77.071429\n",
       "2       82...</td>\n",
       "      <td>0      109.000000\n",
       "1      100.000000\n",
       "2      111...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0      158.333333\n",
       "1      158.333333\n",
       "2      149...</td>\n",
       "      <td>0      103.5\n",
       "1      106.5\n",
       "2      110.5\n",
       "3      ...</td>\n",
       "      <td>0      103.5\n",
       "1      103.5\n",
       "2      103.5\n",
       "3      ...</td>\n",
       "      <td>0       97.5\n",
       "1       97.5\n",
       "2       97.0\n",
       "3      ...</td>\n",
       "      <td>0      118.363636\n",
       "1       97.000000\n",
       "2       94...</td>\n",
       "      <td>0      116.666667\n",
       "1      155.500000\n",
       "2      156...</td>\n",
       "      <td>0      131.200000\n",
       "1      136.166667\n",
       "2      104...</td>\n",
       "      <td>0      108.5\n",
       "1      100.0\n",
       "2      112.5\n",
       "3      ...</td>\n",
       "      <td>0      169.500000\n",
       "1      153.000000\n",
       "2      145...</td>\n",
       "      <td>0      156.0\n",
       "1      156.0\n",
       "2      157.5\n",
       "3      ...</td>\n",
       "      <td>0      145.5\n",
       "1      145.5\n",
       "2      145.5\n",
       "3      ...</td>\n",
       "      <td>0      107.170732\n",
       "1      104.000000\n",
       "2      121...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0      116.5\n",
       "1      117.5\n",
       "2      126.0\n",
       "3      ...</td>\n",
       "      <td>0      100.5\n",
       "1      100.5\n",
       "2      101.5\n",
       "3      ...</td>\n",
       "      <td>0      104.5\n",
       "1      104.5\n",
       "2      104.0\n",
       "3      ...</td>\n",
       "      <td>0       63.0\n",
       "1       60.0\n",
       "2       67.5\n",
       "3      ...</td>\n",
       "      <td>0      130.0\n",
       "1      123.5\n",
       "2      129.5\n",
       "3      ...</td>\n",
       "      <td>0      131.5\n",
       "1      130.0\n",
       "2      131.5\n",
       "3      ...</td>\n",
       "      <td>0      140.5\n",
       "1      150.0\n",
       "2      144.5\n",
       "3      ...</td>\n",
       "      <td>0      155.0\n",
       "1      155.0\n",
       "2      155.0\n",
       "3      ...</td>\n",
       "      <td>0      169.500000\n",
       "1      153.000000\n",
       "2      145...</td>\n",
       "      <td>0      119.5\n",
       "1      122.0\n",
       "2      129.5\n",
       "3      ...</td>\n",
       "      <td>0      154.055944\n",
       "1      136.396396\n",
       "2       44...</td>\n",
       "      <td>0      121.714286\n",
       "1      144.000000\n",
       "2      133...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0      157.000000\n",
       "1      157.000000\n",
       "2      148...</td>\n",
       "      <td>0      106.5\n",
       "1      106.5\n",
       "2      106.0\n",
       "3      ...</td>\n",
       "      <td>0      107.0\n",
       "1      106.0\n",
       "2      106.0\n",
       "3      ...</td>\n",
       "      <td>0       58.5\n",
       "1       70.0\n",
       "2       86.0\n",
       "3      ...</td>\n",
       "      <td>0      141.0\n",
       "1      136.5\n",
       "2      138.0\n",
       "3      ...</td>\n",
       "      <td>0      155.5\n",
       "1      158.5\n",
       "2      156.5\n",
       "3      ...</td>\n",
       "      <td>0      131.0\n",
       "1      130.5\n",
       "2      130.0\n",
       "3      ...</td>\n",
       "      <td>0      133.5\n",
       "1      133.0\n",
       "2      146.5\n",
       "3      ...</td>\n",
       "      <td>0      139.333333\n",
       "1      159.357143\n",
       "2      156...</td>\n",
       "      <td>0      137.0\n",
       "1      138.5\n",
       "2      145.5\n",
       "3      ...</td>\n",
       "      <td>0      137.5\n",
       "1      138.0\n",
       "2      146.5\n",
       "3      ...</td>\n",
       "      <td>0      140.0\n",
       "1      135.0\n",
       "2      142.0\n",
       "3      ...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1173</th>\n",
       "      <td>0      130.5\n",
       "1      127.5\n",
       "2      127.0\n",
       "3      ...</td>\n",
       "      <td>0      100.5\n",
       "1      100.0\n",
       "2       99.5\n",
       "3      ...</td>\n",
       "      <td>0      107.0\n",
       "1      107.0\n",
       "2      109.0\n",
       "3      ...</td>\n",
       "      <td>0       57.0\n",
       "1       67.5\n",
       "2       82.5\n",
       "3      ...</td>\n",
       "      <td>0      110.5\n",
       "1      107.5\n",
       "2      123.5\n",
       "3      ...</td>\n",
       "      <td>0      142.5\n",
       "1      145.0\n",
       "2      156.5\n",
       "3      ...</td>\n",
       "      <td>0       97.0\n",
       "1      124.5\n",
       "2      105.5\n",
       "3      ...</td>\n",
       "      <td>0      127.5\n",
       "1      126.0\n",
       "2      127.5\n",
       "3      ...</td>\n",
       "      <td>0      142.5\n",
       "1      137.5\n",
       "2      137.5\n",
       "3      ...</td>\n",
       "      <td>0      133.0\n",
       "1      132.5\n",
       "2      132.5\n",
       "3      ...</td>\n",
       "      <td>0        4.0\n",
       "1       12.5\n",
       "2       19.0\n",
       "3      ...</td>\n",
       "      <td>0      138.5\n",
       "1      143.0\n",
       "2      143.5\n",
       "3      ...</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1174</th>\n",
       "      <td>0       92.5\n",
       "1       78.5\n",
       "2       92.0\n",
       "3      ...</td>\n",
       "      <td>0      102.5\n",
       "1      103.0\n",
       "2      103.0\n",
       "3      ...</td>\n",
       "      <td>0       87.5\n",
       "1       87.5\n",
       "2       87.5\n",
       "3      ...</td>\n",
       "      <td>0       74.0\n",
       "1       72.5\n",
       "2       74.5\n",
       "3      ...</td>\n",
       "      <td>0       71.5\n",
       "1       74.5\n",
       "2       83.0\n",
       "3      ...</td>\n",
       "      <td>0      113.0\n",
       "1      111.0\n",
       "2      119.0\n",
       "3      ...</td>\n",
       "      <td>0      141.600000\n",
       "1      133.250000\n",
       "2      122...</td>\n",
       "      <td>0      121.0\n",
       "1      120.5\n",
       "2      120.0\n",
       "3      ...</td>\n",
       "      <td>0       87.0\n",
       "1       86.5\n",
       "2       86.0\n",
       "3      ...</td>\n",
       "      <td>0      140.0\n",
       "1      148.5\n",
       "2      142.0\n",
       "3      ...</td>\n",
       "      <td>0      137.909091\n",
       "1      140.000000\n",
       "2      137...</td>\n",
       "      <td>0      117.5\n",
       "1      125.0\n",
       "2      127.0\n",
       "3      ...</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1175</th>\n",
       "      <td>0      130.0\n",
       "1      131.5\n",
       "2      138.0\n",
       "3      ...</td>\n",
       "      <td>0      103.0\n",
       "1      103.5\n",
       "2      103.5\n",
       "3      ...</td>\n",
       "      <td>0       97.0\n",
       "1       96.5\n",
       "2       96.0\n",
       "3      ...</td>\n",
       "      <td>0       54.5\n",
       "1       40.0\n",
       "2       70.0\n",
       "3      ...</td>\n",
       "      <td>0      142.000\n",
       "1      147.000\n",
       "2      142.000\n",
       "3...</td>\n",
       "      <td>0      135.0\n",
       "1      145.0\n",
       "2      138.5\n",
       "3      ...</td>\n",
       "      <td>0       97.0\n",
       "1      124.5\n",
       "2      105.5\n",
       "3      ...</td>\n",
       "      <td>0      137.5\n",
       "1      144.5\n",
       "2      153.5\n",
       "3      ...</td>\n",
       "      <td>0       87.0\n",
       "1       86.5\n",
       "2       86.0\n",
       "3      ...</td>\n",
       "      <td>0      156.5\n",
       "1      156.5\n",
       "2      155.5\n",
       "3      ...</td>\n",
       "      <td>0      135.0\n",
       "1      135.0\n",
       "2      135.5\n",
       "3      ...</td>\n",
       "      <td>0      128.0\n",
       "1      124.5\n",
       "2      136.5\n",
       "3      ...</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1176</th>\n",
       "      <td>0      127.0\n",
       "1      133.5\n",
       "2      137.5\n",
       "3      ...</td>\n",
       "      <td>0      100.5\n",
       "1      100.0\n",
       "2      102.5\n",
       "3      ...</td>\n",
       "      <td>0       91.5\n",
       "1       94.5\n",
       "2       96.0\n",
       "3      ...</td>\n",
       "      <td>0       74.0\n",
       "1       72.5\n",
       "2       74.5\n",
       "3      ...</td>\n",
       "      <td>0      113.875000\n",
       "1      144.000000\n",
       "2      152...</td>\n",
       "      <td>0      132.5\n",
       "1      134.0\n",
       "2      143.5\n",
       "3      ...</td>\n",
       "      <td>0      119.0\n",
       "1      118.5\n",
       "2      118.0\n",
       "3      ...</td>\n",
       "      <td>0      125.5\n",
       "1      121.5\n",
       "2      129.0\n",
       "3      ...</td>\n",
       "      <td>0      137.0\n",
       "1      136.5\n",
       "2      138.5\n",
       "3      ...</td>\n",
       "      <td>0       55.5\n",
       "1       52.0\n",
       "2       77.5\n",
       "3      ...</td>\n",
       "      <td>0      116.5\n",
       "1      116.5\n",
       "2      117.0\n",
       "3      ...</td>\n",
       "      <td>0      114.0\n",
       "1      110.5\n",
       "2      123.5\n",
       "3      ...</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1177</th>\n",
       "      <td>0      158.857143\n",
       "1      158.857143\n",
       "2      150...</td>\n",
       "      <td>0      103.0\n",
       "1      103.5\n",
       "2      107.0\n",
       "3      ...</td>\n",
       "      <td>0      103.5\n",
       "1      105.0\n",
       "2      114.0\n",
       "3      ...</td>\n",
       "      <td>0       74.5\n",
       "1       74.5\n",
       "2       75.0\n",
       "3      ...</td>\n",
       "      <td>0      142.0\n",
       "1      136.5\n",
       "2      133.0\n",
       "3      ...</td>\n",
       "      <td>0      150.0\n",
       "1      144.5\n",
       "2      154.5\n",
       "3      ...</td>\n",
       "      <td>0      103.0\n",
       "1       95.5\n",
       "2      103.5\n",
       "3      ...</td>\n",
       "      <td>0      111.5\n",
       "1      100.0\n",
       "2      104.5\n",
       "3      ...</td>\n",
       "      <td>0      165.428571\n",
       "1      165.875000\n",
       "2      154...</td>\n",
       "      <td>0      146.5\n",
       "1      145.0\n",
       "2      144.0\n",
       "3      ...</td>\n",
       "      <td>0       96.5\n",
       "1       96.5\n",
       "2       96.5\n",
       "3      ...</td>\n",
       "      <td>0      137.0\n",
       "1      134.0\n",
       "2      129.5\n",
       "3      ...</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1178 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                  Lead1  \\\n",
       "0     0      126.0\n",
       "1      119.5\n",
       "2      134.0\n",
       "3      ...   \n",
       "1     0      139.0\n",
       "1      129.0\n",
       "2      127.0\n",
       "3      ...   \n",
       "2     0      158.333333\n",
       "1      158.333333\n",
       "2      149...   \n",
       "3     0      116.5\n",
       "1      117.5\n",
       "2      126.0\n",
       "3      ...   \n",
       "4     0      157.000000\n",
       "1      157.000000\n",
       "2      148...   \n",
       "...                                                 ...   \n",
       "1173  0      130.5\n",
       "1      127.5\n",
       "2      127.0\n",
       "3      ...   \n",
       "1174  0       92.5\n",
       "1       78.5\n",
       "2       92.0\n",
       "3      ...   \n",
       "1175  0      130.0\n",
       "1      131.5\n",
       "2      138.0\n",
       "3      ...   \n",
       "1176  0      127.0\n",
       "1      133.5\n",
       "2      137.5\n",
       "3      ...   \n",
       "1177  0      158.857143\n",
       "1      158.857143\n",
       "2      150...   \n",
       "\n",
       "                                                  Lead2  \\\n",
       "0     0      105.0\n",
       "1      104.5\n",
       "2      104.5\n",
       "3      ...   \n",
       "1     0      103.0\n",
       "1      103.0\n",
       "2      102.0\n",
       "3      ...   \n",
       "2     0      103.5\n",
       "1      106.5\n",
       "2      110.5\n",
       "3      ...   \n",
       "3     0      100.5\n",
       "1      100.5\n",
       "2      101.5\n",
       "3      ...   \n",
       "4     0      106.5\n",
       "1      106.5\n",
       "2      106.0\n",
       "3      ...   \n",
       "...                                                 ...   \n",
       "1173  0      100.5\n",
       "1      100.0\n",
       "2       99.5\n",
       "3      ...   \n",
       "1174  0      102.5\n",
       "1      103.0\n",
       "2      103.0\n",
       "3      ...   \n",
       "1175  0      103.0\n",
       "1      103.5\n",
       "2      103.5\n",
       "3      ...   \n",
       "1176  0      100.5\n",
       "1      100.0\n",
       "2      102.5\n",
       "3      ...   \n",
       "1177  0      103.0\n",
       "1      103.5\n",
       "2      107.0\n",
       "3      ...   \n",
       "\n",
       "                                                  Lead3  \\\n",
       "0     0      104.714286\n",
       "1      117.250000\n",
       "2      101...   \n",
       "1     0      80.5\n",
       "1      80.0\n",
       "2      79.0\n",
       "3      79....   \n",
       "2     0      103.5\n",
       "1      103.5\n",
       "2      103.5\n",
       "3      ...   \n",
       "3     0      104.5\n",
       "1      104.5\n",
       "2      104.0\n",
       "3      ...   \n",
       "4     0      107.0\n",
       "1      106.0\n",
       "2      106.0\n",
       "3      ...   \n",
       "...                                                 ...   \n",
       "1173  0      107.0\n",
       "1      107.0\n",
       "2      109.0\n",
       "3      ...   \n",
       "1174  0       87.5\n",
       "1       87.5\n",
       "2       87.5\n",
       "3      ...   \n",
       "1175  0       97.0\n",
       "1       96.5\n",
       "2       96.0\n",
       "3      ...   \n",
       "1176  0       91.5\n",
       "1       94.5\n",
       "2       96.0\n",
       "3      ...   \n",
       "1177  0      103.5\n",
       "1      105.0\n",
       "2      114.0\n",
       "3      ...   \n",
       "\n",
       "                                                  Lead4  \\\n",
       "0     0       35.957447\n",
       "1       35.500000\n",
       "2       46...   \n",
       "1     0       67.5\n",
       "1       72.0\n",
       "2       77.0\n",
       "3      ...   \n",
       "2     0       97.5\n",
       "1       97.5\n",
       "2       97.0\n",
       "3      ...   \n",
       "3     0       63.0\n",
       "1       60.0\n",
       "2       67.5\n",
       "3      ...   \n",
       "4     0       58.5\n",
       "1       70.0\n",
       "2       86.0\n",
       "3      ...   \n",
       "...                                                 ...   \n",
       "1173  0       57.0\n",
       "1       67.5\n",
       "2       82.5\n",
       "3      ...   \n",
       "1174  0       74.0\n",
       "1       72.5\n",
       "2       74.5\n",
       "3      ...   \n",
       "1175  0       54.5\n",
       "1       40.0\n",
       "2       70.0\n",
       "3      ...   \n",
       "1176  0       74.0\n",
       "1       72.5\n",
       "2       74.5\n",
       "3      ...   \n",
       "1177  0       74.5\n",
       "1       74.5\n",
       "2       75.0\n",
       "3      ...   \n",
       "\n",
       "                                                  Lead5  \\\n",
       "0     0      158.000000\n",
       "1      157.333333\n",
       "2      149...   \n",
       "1     0      127.5\n",
       "1      126.0\n",
       "2      131.5\n",
       "3      ...   \n",
       "2     0      118.363636\n",
       "1       97.000000\n",
       "2       94...   \n",
       "3     0      130.0\n",
       "1      123.5\n",
       "2      129.5\n",
       "3      ...   \n",
       "4     0      141.0\n",
       "1      136.5\n",
       "2      138.0\n",
       "3      ...   \n",
       "...                                                 ...   \n",
       "1173  0      110.5\n",
       "1      107.5\n",
       "2      123.5\n",
       "3      ...   \n",
       "1174  0       71.5\n",
       "1       74.5\n",
       "2       83.0\n",
       "3      ...   \n",
       "1175  0      142.000\n",
       "1      147.000\n",
       "2      142.000\n",
       "3...   \n",
       "1176  0      113.875000\n",
       "1      144.000000\n",
       "2      152...   \n",
       "1177  0      142.0\n",
       "1      136.5\n",
       "2      133.0\n",
       "3      ...   \n",
       "\n",
       "                                                  Lead6  \\\n",
       "0     0      119.5\n",
       "1      116.5\n",
       "2      125.5\n",
       "3      ...   \n",
       "1     0      130.0\n",
       "1      139.0\n",
       "2      130.5\n",
       "3      ...   \n",
       "2     0      116.666667\n",
       "1      155.500000\n",
       "2      156...   \n",
       "3     0      131.5\n",
       "1      130.0\n",
       "2      131.5\n",
       "3      ...   \n",
       "4     0      155.5\n",
       "1      158.5\n",
       "2      156.5\n",
       "3      ...   \n",
       "...                                                 ...   \n",
       "1173  0      142.5\n",
       "1      145.0\n",
       "2      156.5\n",
       "3      ...   \n",
       "1174  0      113.0\n",
       "1      111.0\n",
       "2      119.0\n",
       "3      ...   \n",
       "1175  0      135.0\n",
       "1      145.0\n",
       "2      138.5\n",
       "3      ...   \n",
       "1176  0      132.5\n",
       "1      134.0\n",
       "2      143.5\n",
       "3      ...   \n",
       "1177  0      150.0\n",
       "1      144.5\n",
       "2      154.5\n",
       "3      ...   \n",
       "\n",
       "                                                  Lead7  \\\n",
       "0     0      137.5\n",
       "1      137.0\n",
       "2      136.5\n",
       "3      ...   \n",
       "1     0      129.5\n",
       "1      129.5\n",
       "2      129.5\n",
       "3      ...   \n",
       "2     0      131.200000\n",
       "1      136.166667\n",
       "2      104...   \n",
       "3     0      140.5\n",
       "1      150.0\n",
       "2      144.5\n",
       "3      ...   \n",
       "4     0      131.0\n",
       "1      130.5\n",
       "2      130.0\n",
       "3      ...   \n",
       "...                                                 ...   \n",
       "1173  0       97.0\n",
       "1      124.5\n",
       "2      105.5\n",
       "3      ...   \n",
       "1174  0      141.600000\n",
       "1      133.250000\n",
       "2      122...   \n",
       "1175  0       97.0\n",
       "1      124.5\n",
       "2      105.5\n",
       "3      ...   \n",
       "1176  0      119.0\n",
       "1      118.5\n",
       "2      118.0\n",
       "3      ...   \n",
       "1177  0      103.0\n",
       "1       95.5\n",
       "2      103.5\n",
       "3      ...   \n",
       "\n",
       "                                                  Lead8  \\\n",
       "0     0      156.0\n",
       "1      154.0\n",
       "2      153.5\n",
       "3      ...   \n",
       "1     0      155.5\n",
       "1      155.5\n",
       "2      155.5\n",
       "3      ...   \n",
       "2     0      108.5\n",
       "1      100.0\n",
       "2      112.5\n",
       "3      ...   \n",
       "3     0      155.0\n",
       "1      155.0\n",
       "2      155.0\n",
       "3      ...   \n",
       "4     0      133.5\n",
       "1      133.0\n",
       "2      146.5\n",
       "3      ...   \n",
       "...                                                 ...   \n",
       "1173  0      127.5\n",
       "1      126.0\n",
       "2      127.5\n",
       "3      ...   \n",
       "1174  0      121.0\n",
       "1      120.5\n",
       "2      120.0\n",
       "3      ...   \n",
       "1175  0      137.5\n",
       "1      144.5\n",
       "2      153.5\n",
       "3      ...   \n",
       "1176  0      125.5\n",
       "1      121.5\n",
       "2      129.0\n",
       "3      ...   \n",
       "1177  0      111.5\n",
       "1      100.0\n",
       "2      104.5\n",
       "3      ...   \n",
       "\n",
       "                                                  Lead9  \\\n",
       "0     0      162.000000\n",
       "1      162.000000\n",
       "2      151...   \n",
       "1     0      139.0\n",
       "1      131.5\n",
       "2      128.5\n",
       "3      ...   \n",
       "2     0      169.500000\n",
       "1      153.000000\n",
       "2      145...   \n",
       "3     0      169.500000\n",
       "1      153.000000\n",
       "2      145...   \n",
       "4     0      139.333333\n",
       "1      159.357143\n",
       "2      156...   \n",
       "...                                                 ...   \n",
       "1173  0      142.5\n",
       "1      137.5\n",
       "2      137.5\n",
       "3      ...   \n",
       "1174  0       87.0\n",
       "1       86.5\n",
       "2       86.0\n",
       "3      ...   \n",
       "1175  0       87.0\n",
       "1       86.5\n",
       "2       86.0\n",
       "3      ...   \n",
       "1176  0      137.0\n",
       "1      136.5\n",
       "2      138.5\n",
       "3      ...   \n",
       "1177  0      165.428571\n",
       "1      165.875000\n",
       "2      154...   \n",
       "\n",
       "                                                 Lead10  \\\n",
       "0     0      155.0\n",
       "1      154.5\n",
       "2      155.5\n",
       "3      ...   \n",
       "1     0      153.5\n",
       "1      149.0\n",
       "2      151.0\n",
       "3      ...   \n",
       "2     0      156.0\n",
       "1      156.0\n",
       "2      157.5\n",
       "3      ...   \n",
       "3     0      119.5\n",
       "1      122.0\n",
       "2      129.5\n",
       "3      ...   \n",
       "4     0      137.0\n",
       "1      138.5\n",
       "2      145.5\n",
       "3      ...   \n",
       "...                                                 ...   \n",
       "1173  0      133.0\n",
       "1      132.5\n",
       "2      132.5\n",
       "3      ...   \n",
       "1174  0      140.0\n",
       "1      148.5\n",
       "2      142.0\n",
       "3      ...   \n",
       "1175  0      156.5\n",
       "1      156.5\n",
       "2      155.5\n",
       "3      ...   \n",
       "1176  0       55.5\n",
       "1       52.0\n",
       "2       77.5\n",
       "3      ...   \n",
       "1177  0      146.5\n",
       "1      145.0\n",
       "2      144.0\n",
       "3      ...   \n",
       "\n",
       "                                                 Lead11  \\\n",
       "0     0      193.545455\n",
       "1        3.500000\n",
       "2        3...   \n",
       "1     0       80.166667\n",
       "1       77.071429\n",
       "2       82...   \n",
       "2     0      145.5\n",
       "1      145.5\n",
       "2      145.5\n",
       "3      ...   \n",
       "3     0      154.055944\n",
       "1      136.396396\n",
       "2       44...   \n",
       "4     0      137.5\n",
       "1      138.0\n",
       "2      146.5\n",
       "3      ...   \n",
       "...                                                 ...   \n",
       "1173  0        4.0\n",
       "1       12.5\n",
       "2       19.0\n",
       "3      ...   \n",
       "1174  0      137.909091\n",
       "1      140.000000\n",
       "2      137...   \n",
       "1175  0      135.0\n",
       "1      135.0\n",
       "2      135.5\n",
       "3      ...   \n",
       "1176  0      116.5\n",
       "1      116.5\n",
       "2      117.0\n",
       "3      ...   \n",
       "1177  0       96.5\n",
       "1       96.5\n",
       "2       96.5\n",
       "3      ...   \n",
       "\n",
       "                                                 Lead12  Label  \n",
       "0     0       89.000000\n",
       "1      109.500000\n",
       "2       91...    0.0  \n",
       "1     0      109.000000\n",
       "1      100.000000\n",
       "2      111...    0.0  \n",
       "2     0      107.170732\n",
       "1      104.000000\n",
       "2      121...    0.0  \n",
       "3     0      121.714286\n",
       "1      144.000000\n",
       "2      133...    0.0  \n",
       "4     0      140.0\n",
       "1      135.0\n",
       "2      142.0\n",
       "3      ...    0.0  \n",
       "...                                                 ...    ...  \n",
       "1173  0      138.5\n",
       "1      143.0\n",
       "2      143.5\n",
       "3      ...    4.0  \n",
       "1174  0      117.5\n",
       "1      125.0\n",
       "2      127.0\n",
       "3      ...    4.0  \n",
       "1175  0      128.0\n",
       "1      124.5\n",
       "2      136.5\n",
       "3      ...    4.0  \n",
       "1176  0      114.0\n",
       "1      110.5\n",
       "2      123.5\n",
       "3      ...    4.0  \n",
       "1177  0      137.0\n",
       "1      134.0\n",
       "2      129.5\n",
       "3      ...    4.0  \n",
       "\n",
       "[1178 rows x 13 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X3d_nested"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e3b5fedb",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "c2a71ae7",
   "metadata": {},
   "source": [
    "### Classification Task"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "69ec3a5d",
   "metadata": {},
   "outputs": [],
   "source": [
    "split = StratifiedShuffleSplit(n_splits=1, test_size=0.25, random_state=42)\n",
    "for train_index, test_index in split.split(X3d_nested, X3d_nested['Label']):\n",
    "    X_train = X3d_nested.loc[train_index]\n",
    "    X_test = X3d_nested.loc[test_index]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "0df5b1b4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data set proportions:\n",
      "3.0    0.241087\n",
      "2.0    0.212224\n",
      "4.0    0.202886\n",
      "1.0    0.197793\n",
      "0.0    0.146010\n",
      "Name: Label, dtype: float64\n",
      "\n",
      "Test set proportions:\n",
      "3.0    0.240678\n",
      "2.0    0.213559\n",
      "4.0    0.203390\n",
      "1.0    0.196610\n",
      "0.0    0.145763\n",
      "Name: Label, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "#Ascertain the spits are balanced\n",
    "dataSetProp = X3d_nested['Label'].value_counts()/len(X3d_nested)\n",
    "testSetProp = X_test['Label'].value_counts() / len(X_test)\n",
    "print('Data set proportions:')\n",
    "print(dataSetProp)\n",
    "print('\\nTest set proportions:')\n",
    "print(testSetProp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "c68b5285",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "y_train = X_train['Label']\n",
    "X_train.drop('Label',axis=1,inplace=True)\n",
    "y_test = X_test['Label']\n",
    "X_test.drop('Label',axis=1,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "3f727d3e",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Lead1</th>\n",
       "      <th>Lead2</th>\n",
       "      <th>Lead3</th>\n",
       "      <th>Lead4</th>\n",
       "      <th>Lead5</th>\n",
       "      <th>Lead6</th>\n",
       "      <th>Lead7</th>\n",
       "      <th>Lead8</th>\n",
       "      <th>Lead9</th>\n",
       "      <th>Lead10</th>\n",
       "      <th>Lead11</th>\n",
       "      <th>Lead12</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>309</th>\n",
       "      <td>0      138.0\n",
       "1      140.5\n",
       "2      143.5\n",
       "3      ...</td>\n",
       "      <td>0      100.0\n",
       "1       89.5\n",
       "2       88.5\n",
       "3      ...</td>\n",
       "      <td>0       96.5\n",
       "1       96.0\n",
       "2      101.0\n",
       "3      ...</td>\n",
       "      <td>0       40.0\n",
       "1       33.0\n",
       "2       66.5\n",
       "3      ...</td>\n",
       "      <td>0      108.50\n",
       "1       98.00\n",
       "2      113.00\n",
       "3   ...</td>\n",
       "      <td>0      156.0\n",
       "1      155.0\n",
       "2      156.5\n",
       "3      ...</td>\n",
       "      <td>0      125.535714\n",
       "1      147.666667\n",
       "2      139...</td>\n",
       "      <td>0      133.0\n",
       "1      135.5\n",
       "2      131.5\n",
       "3      ...</td>\n",
       "      <td>0      107.5\n",
       "1       97.5\n",
       "2      123.0\n",
       "3      ...</td>\n",
       "      <td>0      140.5\n",
       "1      139.5\n",
       "2      146.0\n",
       "3      ...</td>\n",
       "      <td>0      153.0\n",
       "1      150.5\n",
       "2      162.5\n",
       "3      ...</td>\n",
       "      <td>0      101.0\n",
       "1      100.5\n",
       "2      110.0\n",
       "3      ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1108</th>\n",
       "      <td>0      124.5\n",
       "1      115.0\n",
       "2      116.5\n",
       "3      ...</td>\n",
       "      <td>0      101.0\n",
       "1      101.5\n",
       "2      102.5\n",
       "3      ...</td>\n",
       "      <td>0      107.0\n",
       "1      107.0\n",
       "2      109.0\n",
       "3      ...</td>\n",
       "      <td>0       25.5\n",
       "1       22.5\n",
       "2       40.5\n",
       "3      ...</td>\n",
       "      <td>0      106.5\n",
       "1      112.5\n",
       "2      117.5\n",
       "3      ...</td>\n",
       "      <td>0      135.0\n",
       "1      145.0\n",
       "2      138.5\n",
       "3      ...</td>\n",
       "      <td>0      145.148148\n",
       "1        6.000000\n",
       "2        6...</td>\n",
       "      <td>0      123.5\n",
       "1      111.0\n",
       "2      114.0\n",
       "3      ...</td>\n",
       "      <td>0      165.428571\n",
       "1      165.875000\n",
       "2      154...</td>\n",
       "      <td>0      130.0\n",
       "1      132.0\n",
       "2      133.0\n",
       "3      ...</td>\n",
       "      <td>0       89.5\n",
       "1       92.5\n",
       "2      102.5\n",
       "3      ...</td>\n",
       "      <td>0      135.0\n",
       "1      128.5\n",
       "2      125.0\n",
       "3      ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>647</th>\n",
       "      <td>0      65.000000\n",
       "1      56.000000\n",
       "2      58.85...</td>\n",
       "      <td>0      80.0\n",
       "1      80.0\n",
       "2      80.0\n",
       "3      81....</td>\n",
       "      <td>0      45.000000\n",
       "1      44.500000\n",
       "2      46.00...</td>\n",
       "      <td>0      40.500000\n",
       "1      51.914286\n",
       "2      45.92...</td>\n",
       "      <td>0       77.000000\n",
       "1       78.555556\n",
       "2       78...</td>\n",
       "      <td>0      45.500000\n",
       "1      50.200000\n",
       "2      46.00...</td>\n",
       "      <td>0       78.000000\n",
       "1       82.000000\n",
       "2       76...</td>\n",
       "      <td>0      54.636364\n",
       "1      58.500000\n",
       "2      62.12...</td>\n",
       "      <td>0      133.500000\n",
       "1      133.500000\n",
       "2      133...</td>\n",
       "      <td>0       73.000000\n",
       "1       75.000000\n",
       "2       75...</td>\n",
       "      <td>0      68.333333\n",
       "1      57.500000\n",
       "2      59.09...</td>\n",
       "      <td>0       74.631579\n",
       "1       76.466667\n",
       "2       79...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>863</th>\n",
       "      <td>0      157.666667\n",
       "1      157.666667\n",
       "2      149...</td>\n",
       "      <td>0      105.0\n",
       "1      109.5\n",
       "2      102.5\n",
       "3      ...</td>\n",
       "      <td>0      104.0\n",
       "1      112.5\n",
       "2      104.5\n",
       "3      ...</td>\n",
       "      <td>0       52.0\n",
       "1       76.0\n",
       "2       58.0\n",
       "3      ...</td>\n",
       "      <td>0      124.5\n",
       "1      120.5\n",
       "2      128.5\n",
       "3      ...</td>\n",
       "      <td>0      118.333333\n",
       "1      125.500000\n",
       "2      128...</td>\n",
       "      <td>0      113.5\n",
       "1      120.0\n",
       "2      151.0\n",
       "3      ...</td>\n",
       "      <td>0       92.5\n",
       "1       94.0\n",
       "2      109.5\n",
       "3      ...</td>\n",
       "      <td>0      120.0\n",
       "1      120.0\n",
       "2      126.5\n",
       "3      ...</td>\n",
       "      <td>0      150.0\n",
       "1      153.5\n",
       "2      145.5\n",
       "3      ...</td>\n",
       "      <td>0      144.0\n",
       "1      137.5\n",
       "2      145.5\n",
       "3      ...</td>\n",
       "      <td>0      127.888889\n",
       "1      126.962963\n",
       "2      133...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>207</th>\n",
       "      <td>0      122.0\n",
       "1      130.0\n",
       "2      130.0\n",
       "3      ...</td>\n",
       "      <td>0       97.5\n",
       "1       92.0\n",
       "2       93.0\n",
       "3      ...</td>\n",
       "      <td>0       85.000000\n",
       "1       80.500000\n",
       "2       86...</td>\n",
       "      <td>0       34.0\n",
       "1       33.0\n",
       "2       63.0\n",
       "3      ...</td>\n",
       "      <td>0       83.50\n",
       "1       85.00\n",
       "2       94.04\n",
       "3   ...</td>\n",
       "      <td>0      117.5\n",
       "1      113.5\n",
       "2      122.5\n",
       "3      ...</td>\n",
       "      <td>0      157.818182\n",
       "1      144.714286\n",
       "2      122...</td>\n",
       "      <td>0      104.5\n",
       "1       93.0\n",
       "2      113.5\n",
       "3      ...</td>\n",
       "      <td>0      116.5\n",
       "1      106.5\n",
       "2      128.5\n",
       "3      ...</td>\n",
       "      <td>0      147.0\n",
       "1      145.0\n",
       "2      149.0\n",
       "3      ...</td>\n",
       "      <td>0      153.781022\n",
       "1      141.024793\n",
       "2       22...</td>\n",
       "      <td>0      106.0\n",
       "1      101.5\n",
       "2      113.5\n",
       "3      ...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                  Lead1  \\\n",
       "309   0      138.0\n",
       "1      140.5\n",
       "2      143.5\n",
       "3      ...   \n",
       "1108  0      124.5\n",
       "1      115.0\n",
       "2      116.5\n",
       "3      ...   \n",
       "647   0      65.000000\n",
       "1      56.000000\n",
       "2      58.85...   \n",
       "863   0      157.666667\n",
       "1      157.666667\n",
       "2      149...   \n",
       "207   0      122.0\n",
       "1      130.0\n",
       "2      130.0\n",
       "3      ...   \n",
       "\n",
       "                                                  Lead2  \\\n",
       "309   0      100.0\n",
       "1       89.5\n",
       "2       88.5\n",
       "3      ...   \n",
       "1108  0      101.0\n",
       "1      101.5\n",
       "2      102.5\n",
       "3      ...   \n",
       "647   0      80.0\n",
       "1      80.0\n",
       "2      80.0\n",
       "3      81....   \n",
       "863   0      105.0\n",
       "1      109.5\n",
       "2      102.5\n",
       "3      ...   \n",
       "207   0       97.5\n",
       "1       92.0\n",
       "2       93.0\n",
       "3      ...   \n",
       "\n",
       "                                                  Lead3  \\\n",
       "309   0       96.5\n",
       "1       96.0\n",
       "2      101.0\n",
       "3      ...   \n",
       "1108  0      107.0\n",
       "1      107.0\n",
       "2      109.0\n",
       "3      ...   \n",
       "647   0      45.000000\n",
       "1      44.500000\n",
       "2      46.00...   \n",
       "863   0      104.0\n",
       "1      112.5\n",
       "2      104.5\n",
       "3      ...   \n",
       "207   0       85.000000\n",
       "1       80.500000\n",
       "2       86...   \n",
       "\n",
       "                                                  Lead4  \\\n",
       "309   0       40.0\n",
       "1       33.0\n",
       "2       66.5\n",
       "3      ...   \n",
       "1108  0       25.5\n",
       "1       22.5\n",
       "2       40.5\n",
       "3      ...   \n",
       "647   0      40.500000\n",
       "1      51.914286\n",
       "2      45.92...   \n",
       "863   0       52.0\n",
       "1       76.0\n",
       "2       58.0\n",
       "3      ...   \n",
       "207   0       34.0\n",
       "1       33.0\n",
       "2       63.0\n",
       "3      ...   \n",
       "\n",
       "                                                  Lead5  \\\n",
       "309   0      108.50\n",
       "1       98.00\n",
       "2      113.00\n",
       "3   ...   \n",
       "1108  0      106.5\n",
       "1      112.5\n",
       "2      117.5\n",
       "3      ...   \n",
       "647   0       77.000000\n",
       "1       78.555556\n",
       "2       78...   \n",
       "863   0      124.5\n",
       "1      120.5\n",
       "2      128.5\n",
       "3      ...   \n",
       "207   0       83.50\n",
       "1       85.00\n",
       "2       94.04\n",
       "3   ...   \n",
       "\n",
       "                                                  Lead6  \\\n",
       "309   0      156.0\n",
       "1      155.0\n",
       "2      156.5\n",
       "3      ...   \n",
       "1108  0      135.0\n",
       "1      145.0\n",
       "2      138.5\n",
       "3      ...   \n",
       "647   0      45.500000\n",
       "1      50.200000\n",
       "2      46.00...   \n",
       "863   0      118.333333\n",
       "1      125.500000\n",
       "2      128...   \n",
       "207   0      117.5\n",
       "1      113.5\n",
       "2      122.5\n",
       "3      ...   \n",
       "\n",
       "                                                  Lead7  \\\n",
       "309   0      125.535714\n",
       "1      147.666667\n",
       "2      139...   \n",
       "1108  0      145.148148\n",
       "1        6.000000\n",
       "2        6...   \n",
       "647   0       78.000000\n",
       "1       82.000000\n",
       "2       76...   \n",
       "863   0      113.5\n",
       "1      120.0\n",
       "2      151.0\n",
       "3      ...   \n",
       "207   0      157.818182\n",
       "1      144.714286\n",
       "2      122...   \n",
       "\n",
       "                                                  Lead8  \\\n",
       "309   0      133.0\n",
       "1      135.5\n",
       "2      131.5\n",
       "3      ...   \n",
       "1108  0      123.5\n",
       "1      111.0\n",
       "2      114.0\n",
       "3      ...   \n",
       "647   0      54.636364\n",
       "1      58.500000\n",
       "2      62.12...   \n",
       "863   0       92.5\n",
       "1       94.0\n",
       "2      109.5\n",
       "3      ...   \n",
       "207   0      104.5\n",
       "1       93.0\n",
       "2      113.5\n",
       "3      ...   \n",
       "\n",
       "                                                  Lead9  \\\n",
       "309   0      107.5\n",
       "1       97.5\n",
       "2      123.0\n",
       "3      ...   \n",
       "1108  0      165.428571\n",
       "1      165.875000\n",
       "2      154...   \n",
       "647   0      133.500000\n",
       "1      133.500000\n",
       "2      133...   \n",
       "863   0      120.0\n",
       "1      120.0\n",
       "2      126.5\n",
       "3      ...   \n",
       "207   0      116.5\n",
       "1      106.5\n",
       "2      128.5\n",
       "3      ...   \n",
       "\n",
       "                                                 Lead10  \\\n",
       "309   0      140.5\n",
       "1      139.5\n",
       "2      146.0\n",
       "3      ...   \n",
       "1108  0      130.0\n",
       "1      132.0\n",
       "2      133.0\n",
       "3      ...   \n",
       "647   0       73.000000\n",
       "1       75.000000\n",
       "2       75...   \n",
       "863   0      150.0\n",
       "1      153.5\n",
       "2      145.5\n",
       "3      ...   \n",
       "207   0      147.0\n",
       "1      145.0\n",
       "2      149.0\n",
       "3      ...   \n",
       "\n",
       "                                                 Lead11  \\\n",
       "309   0      153.0\n",
       "1      150.5\n",
       "2      162.5\n",
       "3      ...   \n",
       "1108  0       89.5\n",
       "1       92.5\n",
       "2      102.5\n",
       "3      ...   \n",
       "647   0      68.333333\n",
       "1      57.500000\n",
       "2      59.09...   \n",
       "863   0      144.0\n",
       "1      137.5\n",
       "2      145.5\n",
       "3      ...   \n",
       "207   0      153.781022\n",
       "1      141.024793\n",
       "2       22...   \n",
       "\n",
       "                                                 Lead12  \n",
       "309   0      101.0\n",
       "1      100.5\n",
       "2      110.0\n",
       "3      ...  \n",
       "1108  0      135.0\n",
       "1      128.5\n",
       "2      125.0\n",
       "3      ...  \n",
       "647   0       74.631579\n",
       "1       76.466667\n",
       "2       79...  \n",
       "863   0      127.888889\n",
       "1      126.962963\n",
       "2      133...  \n",
       "207   0      106.0\n",
       "1      101.5\n",
       "2      113.5\n",
       "3      ...  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7fa8a41a",
   "metadata": {},
   "source": [
    "#### Column concatenator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "36fbcee6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "training time: 9 sec\n"
     ]
    }
   ],
   "source": [
    "pipItems = [\n",
    "    (\"concatenate\", ColumnConcatenator()),\n",
    "    (\"classify\", TimeSeriesForestClassifier(n_estimators=100,n_jobs=-1))]\n",
    "concClf = Pipeline(pipItems)\n",
    "t = time.time()\n",
    "concClf.fit(X_train, y_train)\n",
    "print('training time: {} sec'.format(round(time.time()-t)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "cd2aacae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 288x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column-Concatenator classifier score: 0.9254237288135593\n"
     ]
    }
   ],
   "source": [
    "y_train_pred = cross_val_predict(concClf, X_train, y_train, cv=10)\n",
    "confmat = metrics.confusion_matrix(y_train,y_train_pred)\n",
    "plt.matshow(confmat)\n",
    "sn.heatmap(confmat,annot=True, annot_kws={\"size\":10}, fmt='d')\n",
    "plt.xlabel(\"Actual\")\n",
    "plt.ylabel(\"Predicted\")\n",
    "plt.show()\n",
    "print('Column-Concatenator classifier score: {}'.format(concClf.score(X_test, y_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "73c95904",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "cb7021a3",
   "metadata": {},
   "outputs": [],
   "source": [
    "#### Column-wise ensembling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "4b2d8cdd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "training time: 1417 sec\n"
     ]
    }
   ],
   "source": [
    "ensClf = ColumnEnsembleClassifier(\n",
    "    estimators=[\n",
    "        (\"TSF0\", TimeSeriesForestClassifier(n_estimators=100), [0]),\n",
    "        (\"BOSSEnsemble\", BOSSEnsemble(max_ensemble_size=5,n_jobs=-1), [6])])\n",
    "t = time.time()\n",
    "ensClf.fit(X_train, y_train)\n",
    "print('training time: {} sec'.format(round(time.time()-t)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "af8c34bc",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 288x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column-wise ensembling classifier score: 0.9084745762711864\n"
     ]
    }
   ],
   "source": [
    "y_train_pred = cross_val_predict(ensClf, X_train, y_train, cv=3)\n",
    "confmat = metrics.confusion_matrix(y_train,y_train_pred)\n",
    "plt.matshow(confmat)\n",
    "sn.heatmap(confmat,annot=True, annot_kws={\"size\":10}, fmt='d')\n",
    "plt.xlabel(\"Actual\")\n",
    "plt.ylabel(\"Predicted\")\n",
    "plt.show()\n",
    "print('Column-wise ensembling classifier score: {}'.format(ensClf.score(X_test, y_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "82f302c7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "21353e0e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
